import random
import os

GRID_SIZE = 7
SHIP_SIZES = [3, 2, 2, 1, 1, 1, 1]
EMPTY = "◻"
MISS = "◊"
HIT = "X"
SUNK = "☠"

scores = {}

while True:
    os.system('cls' if os.name == 'nt' else 'clear')
    print("Welcome to Battleship!")
    player_name = input("Enter your name: ").strip()

    shots = 0
    grid = [[EMPTY for _ in range(GRID_SIZE)] for _ in range(GRID_SIZE)]
    ships_grid = [[EMPTY for _ in range(GRID_SIZE)] for _ in range(GRID_SIZE)]
    ship_cells = 0

    for size in SHIP_SIZES:
        ship_cells += size
        placed = False
        while not placed:
            x, y = random.randint(0, GRID_SIZE - 1), random.randint(0, GRID_SIZE - 1)
            direction = random.choice(["H", "V"])
            valid = True
            for i in range(size):
                nx, ny = (x + i, y) if direction == "H" else (x, y + i)
                if nx < 0 or nx >= GRID_SIZE or ny < 0 or ny >= GRID_SIZE or ships_grid[ny][nx] != EMPTY:
                    valid = False
                for dx, dy in [(-1, -1), (-1, 0), (-1, 1), (0, -1), (0, 1), (1, -1), (1, 0), (1, 1)]:
                    if 0 <= nx + dx < GRID_SIZE and 0 <= ny + dy < GRID_SIZE:
                        if ships_grid[ny + dy][nx + dx] != EMPTY:
                            valid = False
            if valid:
                for i in range(size):
                    nx, ny = (x + i, y) if direction == "H" else (x, y + i)
                    ships_grid[ny][nx] = str(size)
                placed = True

    won = False
    while not won:
        os.system('cls' if os.name == 'nt' else 'clear')
        print(f"{player_name}'s Game")
        print("  " + " ".join(chr(65 + i) for i in range(GRID_SIZE)))
        for i, row in enumerate(grid):
            print(f"{i + 1} " + " ".join(row))

        shot_input = input("\nEnter your shot (e.g., B3): ").strip().upper()
        try:
            x, y = ord(shot_input[0]) - 65, int(shot_input[1:]) - 1
        except (ValueError, IndexError):
            print("Invalid input. Try again.")
            input("Press Enter to continue...")
            continue

        if x < 0 or x >= GRID_SIZE or y < 0 or y >= GRID_SIZE:
            print("Shot is out of bounds. Try again.")
            input("Press Enter to continue...")
            continue

        if grid[y][x] in [MISS, HIT, SUNK]:
            print("You already shot here. Try again.")
            input("Press Enter to continue...")
            continue

        shots += 1
        if ships_grid[y][x] != EMPTY:
            ship_size = ships_grid[y][x]
            grid[y][x] = HIT
            print("Hit!")
            ship_cells -= 1

            if ship_size == "1":
                print("You sunk a ship!")
                grid[y][x] = SUNK
            else:
                sunk = True
                for ny in range(GRID_SIZE):
                    for nx in range(GRID_SIZE):
                        if ships_grid[ny][nx] == ship_size and grid[ny][nx] != HIT:
                            sunk = False
                if sunk:
                    print("You sunk a ship!")
                    for ny in range(GRID_SIZE):
                        for nx in range(GRID_SIZE):
                            if ships_grid[ny][nx] == ship_size:
                                grid[ny][nx] = SUNK
